version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app
      - APP_ENV=production
      - DEBUG=False
    env_file:
      - .env.production
    volumes:
      - ./.env.production:/app/.env.production:ro
    restart: unless-stopped
    networks:
      - ignacio-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - ignacio-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

  # Redis service (optional - uncomment if needed for caching)
  # redis:
  #   image: redis:7-alpine
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data
  #   restart: unless-stopped
  #   networks:
  #     - ignacio-network
  #   command: redis-server --appendonly yes

volumes:
  # Uncomment if using Redis
  # redis_data:

networks:
  ignacio-network:
    driver: bridge